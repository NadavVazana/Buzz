import{_ as m,o,c as r,a as n,t as _,b as l,d as f,u as y,r as c,F as $,e as k,f as M,w as U,v as I,g as S,s as x,h as w,i as g}from"./index.a9986b38.js";const b={props:["user"],computed:{loggedInUser(){this.$store.getters.loggedInUser.user}}},L={class:"user-details"},C=n("img",{src:f,alt:"user-chat-icon"},null,-1),O={key:0,class:"user-logged-in"},B={key:1,class:"user-logged-out"};function V(s,e,i,h,a,d){return o(),r("section",{onClick:e[0]||(e[0]=u=>s.$emit("open-modal",i.user)),class:"chat-preview"},[n("div",L,[C,n("h4",null,_(i.user.username),1),i.user.isLoggedIn?(o(),r("div",O)):l("",!0),i.user.isLoggedIn?l("",!0):(o(),r("div",B))])])}const A=m(b,[["render",V]]),N={created(){this.users=this.$store.getters.users,this.loggedInUser=this.$store.getters.loggedInUser.user},updated(){this.users=this.$store.getters.users},data(){return{modal:null,textMessage:"",users:this.$store.getters.users,loggedInUser:this.$store.getters.loggedInUser.user}},components:{chatPreview:A},async created(){const s=await y.getUsers();this.$store.dispatch({type:"setUsers",users:s})},methods:{async onSend(){await this.$store.dispatch({type:"sendMessage",modalInfo:{users:this.modal,content:this.textMessage}}),await this.$store.dispatch({type:"loadUsers"}),this.$emit("messageSent",this.modal.to),this.modal=null},async onOpenModal(s){await this.$store.dispatch({type:"loadUsers"});const e=this.$store.getters.loggedInUser.user;this.modal={to:s,from:e}}}},P={key:0,class:"chat-list"},z={class:"inbox"},D={key:0,class:"message-modal"},E=n("img",{src:S,alt:"modal-icon"},null,-1),F=n("button",null,"Send",-1);function G(s,e,i,h,a,d){const u=c("chat-preview");return this.$store.getters.loggedInUser.user?(o(),r("section",P,[n("div",z,[n("h5",{onClick:e[0]||(e[0]=t=>this.$router.push(`/inbox/${this.$store.getters.loggedInUser.user._id}`))},"Your Inbox")]),(o(),r("ul",{key:this.$store.getters.users},[(o(!0),r($,null,k(a.users,t=>(o(),r("li",{key:t._id},[t._id!==this.$store.getters.loggedInUser.user._id?(o(),M(u,{key:0,onOpenModal:d.onOpenModal,user:t},null,8,["onOpenModal","user"])):l("",!0)]))),128))])),a.modal?(o(),r("div",D,[n("h1",null,"Send a message to "+_(a.modal.to.username)+"!",1),E,n("form",{onSubmit:e[2]||(e[2]=(...t)=>d.onSend&&d.onSend(...t))},[U(n("textarea",{spellcheck:"false","onUpdate:modelValue":e[1]||(e[1]=t=>a.textMessage=t),maxlength:"250",id:"",cols:"30",rows:"10"},null,512),[[I,a.textMessage]]),F],32)])):l("",!0),a.modal?(o(),r("div",{key:1,onClick:e[3]||(e[3]=t=>a.modal=null),class:"black-screen"})):l("",!0)])):l("",!0)}const R=m(N,[["render",G]]),T={components:{statusAdd:x,StatusList:w,chatList:R},methods:{onMessage(s){this.$emit("messageSent",`Message sent to: ${s.username}`,s)}}},Y={class:"main-app-structure"};function j(s,e,i,h,a,d){const u=c("status-add"),t=c("status-list"),v=c("chat-list");return o(),r($,null,[g(u,{onAuthGuard:e[0]||(e[0]=p=>s.$emit("authGuard","Only logged in users can post!"))}),n("div",Y,[g(t,{onRemove:e[1]||(e[1]=p=>this.$emit("remove","Post has been removed!")),onEdit:e[2]||(e[2]=p=>s.$emit("edit","Post has been edited!"))}),g(v,{onMessageSent:d.onMessage},null,8,["onMessageSent"])])],64)}const H=m(T,[["render",j]]);export{H as default};
